# Define SciTE settings for moonscript files.

file.patterns.moon=*.moon;

shbang.moonscript=moon

filter.moonscript=Moonscript (moon)|$(file.patterns.moon)|

lexer.$(file.patterns.moon)=python

keywordclass.moonscript2=return break for while  if else elseif then export \
 import from with in and or not class extends super do using switch when 

keywordclass.moonscript3=getfenv gcinfo loadlib loadstring require \
setfenv unpack _LOADED LUA_PATH _REQUIREDNAME

keywordclass.moonscript=$(keywordclass.moonscript2) \
_G _VERSION assert collectgarbage dofile error getfenv getmetatable ipairs load \
loadfile loadstring module next pairs pcall print rawequal rawget rawset require \
select setfenv setmetatable tonumber tostring type unpack xpcall \
\
coroutine.create coroutine.resume coroutine.running coroutine.status coroutine.wrap coroutine.yield \ 
\
debug.debug debug.getfenv debug.gethook debug.getinfo debug.getlocal debug.getmetatable \
debug.getregistry debug.getupvalue debug.setfenv debug.sethook debug.setlocal debug.setmetatable \
debug.setupvalue debug.traceback \
\
io.close io.flush io.input io.lines io.open io.output io.popen io.read io.stderr io.stdin \
io.stdout io.tmpfile io.type io.write \
\
math.abs math.acos math.asin math.atan math.atan2 math.ceil math.cos math.cosh math.deg \
math.exp math.floor math.fmod math.frexp math.huge math.ldexp math.log math.log10 math.max \
math.min math.modf math.pi math.pow math.rad math.random math.randomseed math.sin math.sinh \
math.sqrt math.tan math.tanh \
\
os.clock os.date os.difftime os.execute os.exit os.getenv os.remove os.rename os.setlocale \
os.time os.tmpname \
\
package.cpath package.loaded package.loaders package.loadlib package.path package.preload \
package.seeall \
\
string.byte string.char string.dump string.find string.format string.gmatch string.gsub \
string.len string.lower string.match string.rep string.reverse string.sub string.upper \
\
table.concat table.insert table.maxn table.remove table.sort \

keywords.$(file.patterns.moon)=$(keywordclass.moonscript)

keywordclass2.moonscript=nil true false self @
keywords2.$(file.patterns.moon)=$(keywordclass2.moonscript)

#~ statement.indent.$(file.patterns.moon)=10 :
statement.indent.$(file.patterns.moon)=5 for while  if else elseif then with class do switch when
 
statement.lookback.$(file.patterns.moon)=0
block.start.$(file.patterns.moon)=
block.end.$(file.patterns.moon)=

view.indentation.examine.*.moon=2

tab.timmy.whinge.level=1

#fold.quotes.moonscript=1

comment.block.moonscript=#~

indent.moonscript.colon=1

# Python styles
# White space
style.moonscript.0=fore:#808080
# Comment
style.moonscript.1=fore:#007F00,$(font.comment)
# Number
style.moonscript.2=fore:#007F7F
# String
style.moonscript.3=fore:#7F007F,$(font.monospace)
# Single quoted string
style.moonscript.4=fore:#7F007F,$(font.monospace)
# Keyword
style.moonscript.5=fore:#00007F,bold
# Triple quotes
style.moonscript.6=fore:#7F0000
# Triple double quotes
style.moonscript.7=fore:#7F0000
# Class name definition
style.moonscript.8=fore:#0000FF,bold
# Function or method name definition
style.moonscript.9=fore:#007F7F,bold
# Operators
style.moonscript.10=bold
# Identifiers
style.moonscript.11=
# Comment-blocks
style.moonscript.12=fore:#7F7F7F
# End of line where string is not closed
style.moonscript.13=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled
# Highlighted identifiers
style.moonscript.14=fore:#407090
# Decorators
style.moonscript.15=fore:#805000
# Matched Operators
style.moonscript.34=fore:#0000FF,bold
style.moonscript.35=fore:#FF0000,bold
# Braces are only matched in operator style
braces.moonscript.style=10

if PLAT_WIN
	command.go.*.moon="e:\work\luabuild\bin\Win32Release\run.bat" "e:\work\moonscript\bin\moon" "$(FileNameExt)"
	command.go.subsystem.*.moon=1
